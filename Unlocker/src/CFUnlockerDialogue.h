/////////////////////////////////////////////////////////////////////////////
// Name:        CFUnlockerDialogue.h
// Purpose:
// Author:      Peter O'Donoghue
// Modified by:
// Created:     23/10/2010 23:02:28
// RCS-ID:
// Copyright:   GPL License
// Licence:
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), 23/10/2010 23:02:28

#ifndef _CFUNLOCKERDIALOGUE_H_
#define _CFUNLOCKERDIALOGUE_H_


#include "wx/notebook.h"
#include "USBDMPanel.h"
#include "CFUnlockerPanel.h"

#define SYMBOL_CFUNLOCKERDIALOGUE_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxCLOSE_BOX|wxTAB_TRAVERSAL
#if TARGET == MC56F80xx
#define SYMBOL_CFUNLOCKERDIALOGUE_TITLE _("MC56F80xx Unlocker")
#elif TARGET == CFVx
#define SYMBOL_CFUNLOCKERDIALOGUE_TITLE _("CFVx Unlocker")
#endif

#define SYMBOL_CFUNLOCKERDIALOGUE_IDNAME ID_CFUNLOCKERDIALOGUE
#define SYMBOL_CFUNLOCKERDIALOGUE_SIZE wxSize(400, 300)
#define SYMBOL_CFUNLOCKERDIALOGUE_POSITION wxDefaultPosition

/*!
 * CFUnlockerDialogue class declaration
 */
class CFUnlockerDialogue: public wxDialog
{
    DECLARE_DYNAMIC_CLASS( CFUnlockerDialogue )
    DECLARE_EVENT_TABLE()

private:
    USBDMPanel* usbdmPanel;
    ColdfireUnlockerPanel* cfUnlockerPanel;
    void OnSelChanging( wxNotebookEvent& event );
    void OnSelChanged( wxNotebookEvent& event );
    wxNotebook* noteBook;

public:
    /// Constructors
    CFUnlockerDialogue();
    CFUnlockerDialogue( wxWindow* parent, wxWindowID id = SYMBOL_CFUNLOCKERDIALOGUE_IDNAME, const wxString& caption = SYMBOL_CFUNLOCKERDIALOGUE_TITLE, const wxPoint& pos = SYMBOL_CFUNLOCKERDIALOGUE_POSITION, const wxSize& size = SYMBOL_CFUNLOCKERDIALOGUE_SIZE, long style = SYMBOL_CFUNLOCKERDIALOGUE_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_CFUNLOCKERDIALOGUE_IDNAME, const wxString& caption = SYMBOL_CFUNLOCKERDIALOGUE_TITLE, const wxPoint& pos = SYMBOL_CFUNLOCKERDIALOGUE_POSITION, const wxSize& size = SYMBOL_CFUNLOCKERDIALOGUE_SIZE, long style = SYMBOL_CFUNLOCKERDIALOGUE_STYLE );

    /// Destructor
    ~CFUnlockerDialogue();

    /// Initialises member variables
    void Init();

    /// Creates the controls and sizers
    void CreateControls();

////@begin CFUnlockerDialogue event handler declarations

////@end CFUnlockerDialogue event handler declarations

////@begin CFUnlockerDialogue member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end CFUnlockerDialogue member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin CFUnlockerDialogue member variables
    /// Control identifiers
    enum {
        ID_CFUNLOCKERDIALOGUE = 10000,
        ID_NOTEBOOK = 10001,
        ID_PANEL = 10002,
        ID_PANEL1 = 10003
    };
////@end CFUnlockerDialogue member variables

    //! Returns the BDM options from the internal state
    //!
    //! @param bdmOptions - where to return options
    //!
    void getBdmOptions( USBDM_ExtendedOptions_t &bdmOptions ) {
       // Set options to default
       bdmOptions.size       = sizeof(USBDM_ExtendedOptions_t);
       bdmOptions.targetType = T_JTAG;
       USBDM_GetDefaultExtendedOptions(&bdmOptions);

       // Poll each page for changes
       usbdmPanel->getDialogueValues( &bdmOptions );
    };
};

#endif
    // _CFUNLOCKERDIALOGUE_H_
